name: "Deploy Preview"

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - development
      - main

permissions:
  issues: write
  pull-requests: write
  contents: read

jobs:
  preview:
    name: "preview"
    runs-on: ubuntu-latest
    environment: preview
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Vercel CLI
        shell: bash
        run: npm i -g vercel

      - name: Install Dependencies
        shell: bash
        run: npm install

      - name: Pull Vercel Environment Information
        shell: bash
        run: vercel pull --environment=preview --yes --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel
        id: deploy
        shell: bash
        run: |
          DEPLOYMENT_URL=$(vercel deploy --yes --token=${{ secrets.VERCEL_TOKEN }})
          echo "deployment_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
          echo "Deployment URL: $DEPLOYMENT_URL"

      - name: Comment PR with Preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const deploymentUrl = '${{ steps.deploy.outputs.deployment_url }}';
            const prNumber = context.issue.number;

            // Find existing preview comment
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('ðŸš€ Preview Deployment')
            );

            const commentBody = `ðŸš€ **Preview Deployment**

            Your changes have been deployed to a preview environment:

            âœ… **Preview URL:** ${deploymentUrl}

            The preview will be updated automatically when you push new commits to this PR.

            ---
            <sub>Powered by [Vercel](https://vercel.com)</sub>`;

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
            }

        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
